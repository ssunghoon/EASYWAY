<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="org.easyway.mapper.WidgetMapper">

	<resultMap id="widgetCustomResultMap" type="org.easyway.domain.office.WidgetCustom">
		<id property="wsId" column="ws_id" />
		<result property="memberId" column="member_id" />
		<result property="officeId" column="office_id" />
		<result property="wsCustom" column="ws_custom" />
		<result property="wsImport" column="ws_import" />
	</resultMap>
	
	<resultMap id="widgetVOResultMap" type="org.easyway.domain.office.WidgetVO">
		<id property="widgetId" column="widget_id" />
		<result property="wsId" column="ws_id" />
		<result property="widgetName" column="widget_name" />
		<result property="widgetPositionX" column="widget_position_x" />
		<result property="widgetPositionY" column="widget_position_y" />
		<result property="widgetWidth" column="widget_width" />
    	<result property="widgetHeight" column="widget_height" />
	</resultMap>
	
	<!-- 위젯 커스텀 처음 저장하기 : WidgetCustom 테이블 -->
	<insert id="insertWidgetCustom">
		INSERT INTO widget_save(
			ws_id, member_id, office_id, ws_custom, ws_import
		)
		VALUES(
			ws_seq.nextval, #{memberId}, #{officeId}, #{wsCustom}, #{wsImport}
		)
		<selectKey keyProperty="wsId" resultType="long" order="AFTER">
			select ws_seq.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<!-- 위젯 커스텀 처음 저장하기 : Widget 테이블 -->
	<insert id="insertWidget">
		INSERT INTO widget(
			widget_id, ws_id, widget_name, widget_position_x, widget_position_y, widget_width, widget_height
		)VALUES(
			widget_seq.nextval, #{wsId}, #{widgetName}, #{widgetPositionX}, #{widgetPositionY}, #{widgetWidth}, #{widgetHeight}
		)
	</insert>
	
  	<!-- 기본 위젯 불러오기 -->
	<select id="getListWidget" resultMap="widgetVOResultMap">
		SELECT w.widget_name, w.widget_position_x, w.widget_position_y, w.widget_width, w.widget_height
			FROM widget w JOIN widget_save ws
			ON w.ws_id = ws.ws_id
			WHERE ws.member_id = #{memberId}
			AND ws.office_id = #{officeId}
			AND ws.ws_import = 'Y'
	</select>
	
	<!-- 현재 저장된 커스텀번호 불러오기 -->
	<select id="readCustomNow" resultType="String">
		SELECT ws_custom FROM widget_save
			WHERE member_id = #{memberId}
			AND office_id = #{officeId}
			AND ws_import = 'Y'
	</select>
	
	<!-- 위젯 기본값 변경하기 : 기존에 있던 기본값 취소 -->
	<update id="updateDefaultCancel">
		UPDATE widget_save SET ws_import = 'N'
			WHERE ws_custom = ( SELECT ws_custom FROM widget_save
			WHERE ws_import = 'Y'
			AND member_id = #{memberId}
			AND office_id = #{officeId})
	</update>

	<!-- 위젯 기본값 변경하기 : 새로 기본값 설정 -->
	<update id="updateDefault">
	  	UPDATE widget_save	SET ws_import = 'Y'
	  		WHERE ws_custom = #{wsCustom}
	  		AND member_id = #{memberId}
			AND office_id = #{officeId}
	</update>
	
	<!-- 위젯 리셋을 위한 삭제 구현 : 해당 커스텀 번호의 위젯 테이블 삭제 -->
	<delete id="deleteWidget">
		DELETE FROM widget w
		WHERE w.ws_id =  (
			SELECT ws.ws_id
			FROM widget_save ws
				WHERE member_id = #{memberId}
				AND office_id = #{officeId}
				AND ws_custom = #{wsCustom}
		)
	</delete>
	
	<!-- 위젯 리셋을 위한 삭제 구현 : 해당 커스텀 번호의 위젯 커스텀 테이블 삭제 -->
	<delete id="deleteWidgetCustom">
		DELETE FROM widget_save
			WHERE member_id = #{memberId}
			AND office_id = #{officeId}
			AND ws_custom = #{wsCustom}
	</delete>

</mapper>
