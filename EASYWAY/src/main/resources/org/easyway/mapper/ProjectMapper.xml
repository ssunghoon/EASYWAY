<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 보드를 그냥쓰면 오류가 뜨기 때문에 콘피그에 typeAlias -->
<mapper namespace="org.easyway.mapper.ProjectMapper">

<!-- 	<sql id="criteria"> -->
<!-- 		<trim prefix="(" suffix=") AND " prefixOverrides="OR"> -->
<!-- 			<foreach item='type' collection="typeArr"> -->
<!-- 				<trim prefix="OR"> -->
<!-- 					<choose> -->
<!-- 						<when test="type == 'T'.toString()"> -->
<!-- 							PP_TITLE like '%'||#{keyword}||'%' </when> -->
<!-- 						<when test="type == 'C'.toString()"> -->
<!-- 							PP_CONTENT like '%'||#{keyword}||'%' </when> -->
<!-- 						<when test="type == 'N'.toString()"> -->
<!-- 							EMPLOYEE_NAME like '%'||#{keyword}||'%' </when> -->
<!-- 					</choose> -->
<!-- 				</trim> -->
<!-- 			</foreach> -->
<!-- 		</trim> -->
<!-- 	</sql> -->

	<insert id="insertProject">
		insert into project(
			project_id, project_name, project_start, project_end, project_content
		)
		values(
			project_seq.nextval, #{projectName}, #{projectStart}, #{projectEnd}, #{projectContent}
		)
	</insert>

	<select id="getListProject" resultType="org.easyway.domain.project.Project">
		SELECT
			project_id AS projectId,
			project_name AS projectName,
			project_start AS projectStart,
			project_end AS projectEnd,
			project_content AS projectContent
		FROM
			PROJECT
	</select>
	
	<update id="updateProject">
		UPDATE
			project
		SET
			project_name = #{projectName}, project_end = #{projectEnd}, project_content = #{projectContent} WHERE project_id = #{projectId}
	</update>
	
	<insert id="insertProjectBoard">
		INSERT INTO P_BOARD VALUES(P_BOARD_SEQ.nextval, #{projectId}, #{projectBoardName})
	</insert>
	
	
	<select id="getListProjectBoard" resultType="org.easyway.domain.project.ProjectBoard">
		SELECT
			pb_id AS projectBoardId,
			project_id AS projectId,
			pb_name AS projectBoardName
		FROM
			P_BOARD WHERE PROJECT_ID = #{projectId}
	</select>
	
	<select id="readProjectBoard" resultType="org.easyway.domain.project.ProjectBoard">
		SELECT
			pb_id AS projectBoardId,
			project_id AS projectId,
			pb_name AS projectBoardName
		FROM
			P_BOARD WHERE PROJECT_ID = #{projectId} AND PB_ID = #{projectBoardId}
	</select>
	
	<update id="updateProjectBoard">
		UPDATE
			P_BOARD
		SET
			PB_NAME = #{projectBoardName}
		WHERE 
			PB_ID = #{projectBoardId} AND PROJECT_ID = #{projectId}
	</update>
	
	<delete id="deleteProjectBoard">
		DELETE FROM P_BOARD WHERE PB_ID = #{projectBoardId} AND PROJECT_ID = #{projectId}
	</delete>
	
	
	<insert id="insertProjectPost">
		INSERT INTO P_POST(pp_id, pb_id, project_id, employee_id, pp_title, pp_content, pp_file_name, pp_date, pp_views)
		VALUES(P_POST_SEQ.nextval, #{projectBoardId}, #{projectId}, #{employeeId}, #{projectPostTitle}, #{projectPostContent}, #{projectPostFileName, jdbcType=VARCHAR}, SYSDATE, 0)
	</insert>

	<select id="getListProjectPost" resultType="org.easyway.domain.project.ProjectPost">
		SELECT
			pp_id AS projectPostId,
			pb_id AS projectBoardId,
			project_id AS projectId,
			employee_id AS employeeId,
			pp_title AS projectPostTitle,
			pp_content AS projectPostContent,
			pp_date AS projectPostDate,
			pp_views AS projectPostViews
		FROM
			P_POST WHERE PB_ID = #{projectBoardId}
	</select>
	
	<select id="readProjectPost" resultType="org.easyway.domain.project.ProjectPost">
		SELECT
			pp_id AS projectPostId,
			pb_id AS projectBoardId,
			project_id AS projectId,
			employee_id AS employeeId,
			pp_title AS projectPostTitle,
			pp_content AS projectPostContent,
			pp_date AS projectPostDate,
			pp_views AS projectPostViews
		FROM
			P_POST WHERE PB_ID = #{projectBoardId} AND PP_ID = ${projectPostId}
	</select>
	
	<update id="updateProjectPost">
		UPDATE
			P_POST
		SET
			PP_TITLE = #{projectPostTitle}, PP_CONTENT = #{projectPostContent}, pp_file_name = #{projectPostFileName, jdbcType=VARCHAR}
		WHERE 
			PB_ID = #{projectBoardId} AND PP_ID = #{projectPostId}
	</update>
	
	<delete id="deleteProjectPost">
		DELETE FROM P_POST WHERE PB_ID = #{projectBoardId} AND PP_ID = #{projectPostId}
	</delete>
	
	<select id="getListProjectPostDTO" resultType="org.easyway.domain.project.ProjectPostDTO">
	<!-- <![CDATA[
		SELECT
				pp_id AS projectPostId,
				pb_id AS projectBoardId,
				project_id AS projectId,
				employee_name AS employeeName,
				pp_title AS projectPostTitle,
				pp_content AS projectPostContent,
				pp_date AS projectPostDate,
				pp_views AS projectPostViews
		FROM
			(select
			    rownum rn, pp.pp_id, pp.pb_id, pp.project_id, e.employee_name, pp.pp_title, pp.pp_content, pp.pp_date, pp.pp_views
			 FROM 
			    P_POST pp, EMPLOYEE e
			  WHERE pp.EMPLOYEE_ID = e.EMPLOYEE_ID AND
			    	 rownum <= #{pageNum} * #{amount}
			AND PB_ID = #{projectBoardId}
			AND PROJECT_ID = #{projectId}]]>
				<include refid="criteria"></include>
							<![CDATA[
		ORDER BY
			pp.pp_id DESC)where rn > (#{pageNum} -1) * #{amount}
	]]> -->
		SELECT
			pp_id AS projectPostId,
			pb_id AS projectBoardId,
			project_id AS projectId,
			employee_name AS employeeName,
			pp_title AS projectPostTitle,
			pp_content AS projectPostContent,
			pp_date AS projectPostDate,
			pp_views AS projectPostViews
		FROM
			P_POST pp, EMPLOYEE e
		WHERE
			pp.EMPLOYEE_ID = e.EMPLOYEE_ID
		AND
			PB_ID = #{projectBoardId}
		AND
			PROJECT_ID = #{projectId}
		ORDER BY
			pp.PP_ID desc
	</select>
	
<!-- 	<select id="getTotalCount" resultType="int"> -->
<!-- 		SELECT -->
<!-- 	    	COUNT(pp.PP_ID)  -->
<!-- 	    FROM  -->
<!-- 	    	P_POST pp, EMPLOYEE e -->
<!-- 	    WHERE -->
<!-- 	    	pp.EMPLOYEE_ID = e.EMPLOYEE_ID -->
<!-- 	    AND -->
<!-- 	    	PB_ID = #{projectBoardId} -->
<!-- 		AND -->
<!-- 			PROJECT_ID = #{projectId} -->
<!-- 		<include refid="criteria"></include> -->
<!-- 	</select> -->
	
	<select id="readProjectPostDTO" resultType="org.easyway.domain.project.ProjectPostDTO">
		SELECT
			pp.pp_id AS projectPostId,
			pp.pb_id AS projectBoardId,
			pp.project_id AS projectId,
			e.employee_name AS employeeName,
			pp.pp_title AS projectPostTitle,
			pp.pp_content AS projectPostContent,
			pp.pp_date AS projectPostDate,
			pp.pp_views AS projectPostViews,
			pp.pp_file_name AS projectPostFileName
		FROM
			P_POST pp, EMPLOYEE e WHERE pp.EMPLOYEE_ID = e.EMPLOYEE_ID AND PB_ID = #{projectBoardId} AND PP_ID = #{projectPostId}
	</select>
	
</mapper>















