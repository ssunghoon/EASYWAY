<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.easyway.mapper.ScheduleMapper">
	<cache />
	<!--스케쥴테이블 전체 불러오기<![CDATA[ ]]>는 추후 부등호(<,>)를 사용하기 위해서-->
	<select id="getList" resultType = "org.easyway.domain.schedule.ScheduleVO">
			SELECT
			schedule_id AS scheduleId , employee_id AS employeeId, schedule_title AS scheduleTitle,
			schedule_start AS scheduleStart, schedule_end AS scheduleEnd,
			schedule_content AS scheduleContent, schedule_importance AS scheduleImportance, schedule_private AS schedulePrivate
			FROM schedule where employee_id = #{employeeId} ORDER BY schedule_id 
	</select>
<!-- 	FROM schedule where employee_id = #{employeeId} ORDER BY schedule_id session처리 -->
	<!--일정등록 schedule_seq.nextval 자동으로 1씩증가-->
	<insert id="insert">
		INSERT INTO schedule(
			schedule_id, employee_id, schedule_title , schedule_start, schedule_end,
			schedule_content, schedule_importance , schedule_private
		)
		VALUES(
			schedule_seq.nextval, #{employeeId}, #{scheduleTitle}, #{scheduleStart},#{scheduleEnd},
			#{scheduleContent}, #{scheduleImportance}, #{schedulePrivate}
		)
	</insert>
	<!-- scheduleId 사용시 pk번호 반환하는 sql문
	dual:함수에 대한 쓰임을 알고 싶을때 특정 테이블을 생성할 필요없이 dual 테이블을 이용하여 함수의 값을 리턴(return)받을 수 있다. -->
	<insert id="insertSelectKey" >
		<selectKey keyProperty="scheduleId" order ="BEFORE"
		resultType = "long">
		select schedule_seq.nextval from dual
		</selectKey>
	
		INSERT INTO schedule (schedule_id , employee_id, schedule_title , schedule_start, schedule_end,
			schedule_content , schedule_importance , schedule_private )
		VALUES
		(#{scheduleId}, #{employeeId}, #{scheduleTitle},#{scheduleStart},#{scheduleEnd},
			#{scheduleContent}, #{scheduleImportance}, #{schedulePrivate}
	</insert>
	
	 
	<select id="read" resultType = "org.easyway.domain.schedule.ScheduleVO">
		SELECT 
			schedule_id AS scheduleId , employee_id AS employeeId, schedule_title AS scheduleTitle,
			schedule_start AS scheduleStart, schedule_end AS scheduleEnd,
			schedule_content AS scheduleContent, schedule_importance AS scheduleImportance, schedule_private AS schedulePrivate
		FROM schedule WHERE schedule_id = #{scheduleId}
	</select>
<!-- 	WHERE schedule_id = #{scheduleId} -->

	<delete id="remove">
		delete from schedule where schedule_id = #{scheduleId}
	</delete>
	
	<update id="modify">	
		update schedule set schedule_title = #{scheduleTitle}, schedule_start = #{scheduleStart},
		schedule_end =#{scheduleEnd},schedule_content = #{scheduleContent},
		schedule_importance = #{scheduleImportance}, schedule_private = #{schedulePrivate}
		where schedule_id= #{scheduleId}
	</update>
	
</mapper>
